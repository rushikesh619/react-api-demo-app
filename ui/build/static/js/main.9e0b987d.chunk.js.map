{"version":3,"sources":["pages/relationships.js","App.js","reportWebVitals.js","index.js"],"names":["Relate","useStyles","makeStyles","root","height","background","table","minWidth","Relationship","useState","relations","setRelations","persons","setPersons","setMatrix","person1","setPerson1","person2","setPerson2","useEffect","axios","get","then","res","console","log","data","relationship","temp","peoples","forEach","element","name","push","matrix","catch","err","columns","title","field","editComponent","value","onRowDataChange","rowData","Select","onChange","event","firstPerson","target","map","person","MenuItem","secondPerson","relation","classes","degreeOfRelation","a","post","response","result","out","p","alert","error","className","Container","maxWidth","Typography","variant","align","gutterBottom","Link","href","TextField","id","label","Button","color","onClick","document","getElementById","success","editable","onRowAdd","newData","Promise","resolve","reject","conclusion","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","onRowDelete","dataDelete","splice","select","helperText","e","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.9e0b987d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MeterialTable from 'material-table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { Container, Link, Button, TextField, Select, MenuItem, ExpansionPanel, ExpansionPanelSummary, ExpansionPanelDetails } from '@material-ui/core/'\r\nimport axios from 'axios';\r\n\r\nconst Relate = [\"brother\", \"sister\", \"father\", \"mother\", \"brother in law\", \"sister in law\", \"father in law\", \"mother in law\", \"son\", \"daughter\", \"nephew\", \"niece\", \"grand Father\", \"grand Mother\", \"Uncle\", \"aunty\"];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100%\",\r\n    background: \"linear-gradient(45deg, #FE6888 30%, #FF8E53 90%)\",\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nfunction Relationship() {\r\n  const [relations, setRelations] = useState([]);\r\n  const [persons, setPersons] = useState([]);\r\n  const [matrix, setMatrix] = useState([]);\r\n  const [path, setPath] = useState([]);\r\n  const [person1, setPerson1] = useState([]);\r\n  const [person2, setPerson2] = useState([]);\r\n  useEffect(() => {\r\n    axios.get('/api/relationship/getRelations').then((res) => {\r\n      console.log(res);\r\n      setRelations(res.data.relationship);\r\n      console.log(res.data.persons);\r\n      let temp = [];\r\n      const peoples = res.data.persons;\r\n      console.log(peoples);\r\n      peoples.forEach(element => {\r\n        let name = element.name;\r\n        temp.push(name);\r\n      });\r\n      console.log(temp);\r\n      setPersons(temp);\r\n      console.log(res.data.matrix);\r\n      setMatrix(res.data.matrix);\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'First Person',\r\n      field: 'firstPerson',\r\n      editComponent: ({ value, onRowDataChange, rowData }) => (\r\n        <Select\r\n          value={value}\r\n          onChange={(event) => {\r\n            onRowDataChange({\r\n              ...rowData,\r\n              firstPerson: (event.target.value) ?? \"\",\r\n            });\r\n          }}\r\n        >\r\n          {persons.map((person) => (\r\n            <MenuItem key={person} value={person}>\r\n              {person}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Second Person',\r\n      field: 'secondPerson',\r\n      editComponent: ({ value, onRowDataChange, rowData }) => (\r\n        <Select\r\n          value={value}\r\n          onChange={(event) => {\r\n            onRowDataChange({\r\n              ...rowData,\r\n              secondPerson: (event.target.value) ?? \"\",\r\n            });\r\n          }}\r\n        >\r\n          {persons.map((person) => (\r\n            <MenuItem key={person} value={person}>\r\n              {person}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Relation', field: 'relation',\r\n      editComponent: ({ value, onRowDataChange, rowData }) => (\r\n        <Select\r\n          value={value}\r\n          onChange={(event) => {\r\n            onRowDataChange({\r\n              ...rowData,\r\n              relation: (event.target.value) ?? \"\",\r\n            });\r\n          }}\r\n        >\r\n          {Relate.map((relation) => (\r\n            <MenuItem key={relation} value={relation}>\r\n              {relation}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Conclusion', field: 'conclusion'\r\n    }\r\n  ]\r\n  const classes = useStyles();\r\n\r\n  const saveData = () => {\r\n    const data = relations;\r\n    axios.post('/api/relationship/saveData', data)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data.success === true) {\r\n          alert(\"data saved successfully\");\r\n        } else {\r\n          alert(\"data not saved\");\r\n        }\r\n      }).catch(error => {\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  const handleChange1 = (event) => {\r\n    setPerson1(event.target.value);\r\n  };\r\n  const handleChange2 = (event) => {\r\n    setPerson2(event.target.value);\r\n  };\r\n\r\n  const addPerson = () => {\r\n    const newItem = document.getElementById(\"activity\").value;\r\n    const temp = {\r\n      name: newItem\r\n    }\r\n    axios.post('/api/relationship/addPersons', temp)\r\n      .then((res) => {\r\n        console.log(res);\r\n      }).catch(err => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  const degreeOfRelation = async () => {\r\n    const data = [person1, person2];\r\n    await axios.post('/api/relationship/degreeOfRelation', data)\r\n      .then(response => {\r\n        console.log(response.data.result);\r\n        if (response.data.result) {\r\n          if (response.data.result) {\r\n            var out = '';\r\n            for (var p in response.data.result) {\r\n              out += p + ': ' + response.data.result[p] + '\\n';\r\n            }\r\n            alert(out);\r\n          }\r\n        }\r\n        if (response.data.result == false) {\r\n          alert('persons dont have any relation')\r\n        }\r\n      }).catch(error => {\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth='md'>\r\n        <Typography variant=\"h2\" align='center' gutterBottom >\r\n          Relationship App\r\n        </Typography>\r\n        <Typography variant=\"h4\" align='center' gutterBottom >\r\n          To demonstrate the usage of material table, UI and rest-api\r\n        </Typography>\r\n        <Typography variant=\"h5\" align='center' gutterBottom >\r\n          Developers Info :-\r\n          <Link href=\"http://rushikesh619.github.io/\" >\r\n            http://rushikesh619.github.io/\r\n          </Link>\r\n        </Typography>\r\n      </Container>\r\n      <Container>\r\n        <Typography align='center' gutterBottom>\r\n          Add persons to the system from here:\r\n          <form>\r\n            <TextField id=\"activity\" label='Persons' variant='outlined' />\r\n            <div>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={addPerson}>\r\n                submit\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Typography>\r\n      </Container>\r\n      <Container maxWidth='md'>\r\n        <Typography align='center' gutterBottom >\r\n          <Button color='primary' variant='contained' onClick={saveData}>\r\n            Save your data\r\n          </Button>\r\n        </Typography>\r\n        <MeterialTable\r\n          title='Relationship Table'\r\n          data={relations}\r\n          columns={columns}\r\n          editable={{\r\n            onRowAdd: newData =>\r\n              new Promise((resolve, reject) => {\r\n                console.log(newData);\r\n                const temp = {\r\n                  firstPerson: newData.firstPerson,\r\n                  relation: newData.relation,\r\n                  secondPerson: newData.secondPerson,\r\n                  conclusion: `${newData.firstPerson} is ${newData.secondPerson}'s ${newData.relation}`\r\n                }\r\n                setTimeout(() => {\r\n                  setRelations([...relations, temp]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...relations];\r\n                  const index = oldData.tableData.id;\r\n                  const temp = {\r\n                    firstPerson: newData.firstPerson,\r\n                    relation: newData.relation,\r\n                    secondPerson: newData.secondPerson,\r\n                    conclusion: `${newData.firstPerson} is ${newData.secondPerson}'s ${newData.relation}`\r\n                  }\r\n                  dataUpdate[index] = temp;\r\n                  setRelations([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowDelete: oldData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...relations];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setRelations([...dataDelete]);\r\n\r\n                  resolve()\r\n                }, 1000)\r\n              }),\r\n          }}\r\n        />\r\n      </Container>\r\n      <Container>\r\n        <Typography align='center' gutterBottom>\r\n          Select Peoples you want to see relationship between:\r\n          <form>\r\n            <TextField\r\n              id=\"standard-select-currency\"\r\n              select\r\n              label=\"person 1\"\r\n              value={person1}\r\n              onChange={handleChange1}\r\n              helperText=\"Please select person 1\"\r\n            >\r\n              {persons.map((e) => (\r\n                <MenuItem value={e}>\r\n                  {e}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <TextField\r\n              id=\"standard-select-currency\"\r\n              select\r\n              label=\"person 2\"\r\n              value={person2}\r\n              onChange={handleChange2}\r\n              helperText=\"Please select person 2\"\r\n            >\r\n              {persons.map((e) => (\r\n                <MenuItem value={e}>\r\n                  {e}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={degreeOfRelation}>\r\n                submit\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        </Typography>\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\nexport default Relationship\r\n\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Relationships from './pages/relationships';\n\nfunction App() {\n  return (\n    <Relationships />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}