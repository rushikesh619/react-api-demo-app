{"version":3,"sources":["pages/relationships.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","height","background","table","minWidth","Button","Relationship","useState","relations","setRelations","useEffect","axios","get","then","res","console","log","data","relationship","catch","err","classes","className","Container","maxWidth","Typography","variant","align","gutterBottom","Link","href","color","onClick","post","response","success","alert","error","title","columns","field","editable","onRowAdd","newData","Promise","resolve","reject","temp","firstPerson","relation","secondPerson","conclusion","setTimeout","onRowUpdate","oldData","dataUpdate","index","tableData","id","onRowDelete","dataDelete","splice","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a26ee4f7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport MeterialTable from 'material-table';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Container, Link, Button } from '@material-ui/core/'\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    height: \"100%\",\r\n    background: \"linear-gradient(45deg, #FE6888 30%, #FF8E53 90%)\",\r\n  },\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n  Button: {\r\n\r\n  }\r\n});\r\n\r\nfunction Relationship() {\r\n  const [relations, setRelations] = useState([])\r\n  useEffect(() => {\r\n    axios.get('/api/relationship/getRelations').then((res) => {\r\n      console.log(res);\r\n      setRelations(res.data.relationship)\r\n    }).catch(err => {\r\n      console.log(err);\r\n    })\r\n  }, [])\r\n\r\n  const columns = [\r\n    {\r\n      title: 'First Person', field: 'firstPerson'\r\n    },\r\n    {\r\n      title: 'Second Person', field: 'secondPerson'\r\n    },\r\n    {\r\n      title: 'Relation', field: 'relation'\r\n    },\r\n    {\r\n      title: 'Conclusion', field: 'conclusion'\r\n    }\r\n  ]\r\n  const classes = useStyles();\r\n\r\n  const saveData = () => {\r\n    const data = relations;\r\n    axios.post('/api/relationship/saveData', data)\r\n      .then(response => {\r\n        console.log(response.data);\r\n        if (response.data.success === true) {\r\n          alert(\"todos saved successfully\");\r\n        } else {\r\n          alert(\"todos not saved\");\r\n        }\r\n      }).catch(error => {\r\n        alert(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Container maxWidth='md'>\r\n        <Typography variant=\"h2\" align='center' gutterBottom >\r\n          Relationship App\r\n        </Typography>\r\n        <Typography variant=\"h4\" align='center' gutterBottom >\r\n          To demonstrate the usage of material table, UI and rest-api\r\n        </Typography>\r\n        <Typography variant=\"h5\" align='center' gutterBottom >\r\n          Developers Info\r\n          <Link href=\"http://rushikesh619.github.io/\" >\r\n            http://rushikesh619.github.io/\r\n          </Link>\r\n        </Typography>\r\n        <Typography align='center' gutterBottom >\r\n          <Button color='primary' variant='contained' onClick={saveData}>\r\n            Save your data\r\n          </Button>\r\n        </Typography>\r\n        <MeterialTable\r\n          title='Relationship Table'\r\n          data={relations}\r\n          columns={columns}\r\n          editable={{\r\n            onRowAdd: newData =>\r\n              new Promise((resolve, reject) => {\r\n                console.log(newData);\r\n                const temp = {\r\n                  firstPerson: newData.firstPerson,\r\n                  relation: newData.relation,\r\n                  secondPerson: newData.secondPerson,\r\n                  conclusion: `${newData.firstPerson} is ${newData.secondPerson}'s ${newData.relation}`\r\n                }\r\n                setTimeout(() => {\r\n                  setRelations([...relations, temp]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowUpdate: (newData, oldData) =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataUpdate = [...relations];\r\n                  const index = oldData.tableData.id;\r\n                  const temp = {\r\n                    firstPerson: newData.firstPerson,\r\n                    relation: newData.relation,\r\n                    secondPerson: newData.secondPerson,\r\n                    conclusion: `${newData.firstPerson} is ${newData.secondPerson}'s ${newData.relation}`\r\n                  }\r\n                  dataUpdate[index] = temp;\r\n                  setRelations([...dataUpdate]);\r\n\r\n                  resolve();\r\n                }, 1000)\r\n              }),\r\n            onRowDelete: oldData =>\r\n              new Promise((resolve, reject) => {\r\n                setTimeout(() => {\r\n                  const dataDelete = [...relations];\r\n                  const index = oldData.tableData.id;\r\n                  dataDelete.splice(index, 1);\r\n                  setRelations([...dataDelete]);\r\n\r\n                  resolve()\r\n                }, 1000)\r\n              }),\r\n          }}\r\n        />\r\n      </Container>\r\n    </div>\r\n  )\r\n}\r\nexport default Relationship\r\n\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Relationships from './pages/relationships';\n\nfunction App() {\n  return (\n    <Relationships />\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}